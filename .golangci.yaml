linters-settings:  # https://golangci-lint.run/
  dupl:
    threshold: 100
  funlen:
    lines: 50
    statements: 25
  gci:
    local-prefixes: github.com/golangci/golangci-lint
  goconst:
    min-len: 4
    min-occurrences: 1
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport  # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
      - ptrToRefParam
      - sloppyReassign
  gocyclo:
    min-complexity: 15
  goimports:
    local-prefixes: github.com/golangci/golangci-lint
  gomnd:
    settings:
      mnd:
        # don't include the "operation" and "assign"
        checks: argument,case,condition,return
  govet:
    check-shadowing: true
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  lll:
    line-length: 250
  maligned:
    suggest-new: true
  nolintlint:
    allow-leading-space: false # disallow leading spaces. A space means the //nolint comment shows in `godoc` output.
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: true # require nolint directives to be specific about which linter is being skipped
linters:
  enable-all: true
  disable:
    - deadcode
    - exhaustivestruct
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - godot
    - godox
    - goerr113
    - golint
    - ifshort
    - interfacer
    - maligned
    - nosnakecase
    - scopelint
    - structcheck
    - varcheck
    - wsl
issues:
  new: true
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Ignore magic numbers and inline strings in tests.
    - path: _test\.go
      linters:
        - gomnd
        - goconst
    # Ignore line length for string assignments (don't try and wrap regex definitions)
    - linters:
        - lll
      source: "^(.*= (\".*\"|`.*`))$"

# golangci.com configuration
# https://github.com/golangci/golangci/wiki/Configuration
service:
  golangci-lint-version: 1.52.x # use the fixed version to not introduce new linters unexpectedly
  prepare:
    - echo "here I can run custom commands, but no preparation needed for this repo"
